var AI=function(a){return a.GameTools=function(){function a(a){return"not-end"!==b(a)}function b(a){for(var b=["x","o"],c=0;c<2;++c)if(e(b[c],a))return b[c]+"-won";for(var c=0;c<9;++c)if("e"===a[c])return"not-end";return"draw"}function c(a,b,c){return a===b+"-won"?10-c:"draw"===a?0:c-10}function d(a){var b=[];return a.forEach(function(a,c){"e"===a&&b.push(c)}),b}function e(a,b){for(var c=0;c<3;++c)if(a===b[c]&&a===b[c+3]&&a===b[c+6])return!0;for(var c=0;c<=6;c+=3)if(a===b[c]&&a===b[c+1]&&a===b[c+2])return!0;return a===b[0]&&a===b[4]&&a==b[8]||a===b[2]&&a===b[4]&&a==b[6]}function f(a,b,c){var d=a.slice();return d[b]=c,d}return{getStateOfGame:b,isTerminated:a,getGameScore:c,getAllMoves:d,getBoardAfterSimulatedMove:f}}(),a}(AI||{}),AI=function(a){return a.Action=function(a){this.move=a,this.boardAfterMove=[],this.score=-1e3},a}(AI||{}),AI=function(a){return a.miniMax=function(){function d(a,g,h,i){var j=b.getStateOfGame(a);if("not-end"!=j){var k=new c(-1);return k.score=b.getGameScore(j,h,i),k}var l=[];return b.getAllMoves(a).forEach(function(e){var f=new c(e);f.board=b.getBoardAfterSimulatedMove(a,e,g),f.score=d(f.board,"x"===g?"o":"x",h,i+1).score,l.push(f)}),l.sort(g===h?e:f),l[0]}function e(a,b){return b.score-a.score}function f(a,b){return a.score-b.score}var b=a.GameTools,c=a.Action;return{calculateValue:d}}(),a}(AI||{}),AI=function(a){return a.Validation=function(){function b(a,b){return a=a.toLowerCase(),"x"!==a&&"o"!==a?(console.log("AI ERROR: "+a+" is not valid "+b+" character!"),!1):a}function c(a,c){var d=b(a,"ai");return d===c?(console.log("AI ERROR: Player character"+a+" cannot be the same as ai character "+c+"!"),!1):d}function d(b,c,d){if(!Array.isArray(b))return console.log("AI ERROR: passed board argument is not type of array"),!1;if(9!==b.length)return console.log("AI ERROR: length of board array is not valid, expected value is 9, given value's length is "+b.length),!1;if(b.forEach(function(a,c){b[c]=a.toLowerCase()}),e(b))return console.log("AI ERROR: board array contains invalid character !"),!1;var g=f(b,d),h=f(b,"o"===d?"x":"o");return g>h||g===h&&c!==d?(console.log("AI ERROR: It is not ai's turn!"),!1):h>g&&c===d?(console.log("AI ERROR: Given board contains too few ai' moves"),!1):h-1>g?(console.log("AI ERROR: Given board contains too few player' moves"),!1):a.GameTools.isTerminated(b)?(console.log("AI ERROR: Given board represents terminated game!"),!1):b}function e(a){var b=!1;return a.forEach(function(a){"e"!==a&&"x"!==a&&"o"!==a&&(b=!0)}),b}function f(a,b){return a.reduce(function(a,c){return c===b?a+1:a},0)}return{aiCharacter:function(a){return b(a.aiCharacter,"ai")},playerCharacter:function(a){return c(a.playerCharacter,a.aiCharacter)},startingCharacter:function(a){return b(a.startingCharacter,"starting")},board:function(a){return d(a.board,a.startingCharacter,a.aiCharacter)}}}(),a}(AI||{}),AI=function(a){var b=a.Validation;return a.initialization=function(a,c){for(var d in a)if(a.hasOwnProperty(d)){if(!(c[d]=b[d](a)))return console.log("AI: Initialization aborted: "+d+" initialization error!"),!1}else console.log('AI ERROR: Missing property : "'+d+'" in passed data object');return!0},a}(AI||{}),AI=function(a){function d(a){var d={};return b(a,d)?c(d.board,d.aiCharacter,d.aiCharacter,0):void console.log("AI: Action cannot be returned: invalid data passed to function!")}var b=a.initialization,c=a.miniMax.calculateValue;return{getAIMove:function(a){return d(a).move},getBoardAfterAIMove:function(a){return d(a).board},isTerminated:a.GameTools.isTerminated,getStateOfGame:a.GameTools.getStateOfGame}}(AI||{});