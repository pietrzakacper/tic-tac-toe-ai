!function e(r,t,n){function a(i,u){if(!t[i]){if(!r[i]){var f="function"==typeof require&&require;if(!u&&f)return f(i,!0);if(o)return o(i,!0);var c=new Error("Cannot find module '"+i+"'");throw c.code="MODULE_NOT_FOUND",c}var d=t[i]={exports:{}};r[i][0].call(d.exports,function(e){var t=r[i][1][e];return a(t?t:e)},d,d.exports,e,r,t,n)}return t[i].exports}for(var o="function"==typeof require&&require,i=0;i<n.length;i++)a(n[i]);return a}({1:[function(e,r,t){"use strict";function n(e,r){if(!(e instanceof r))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0});var a=function e(r){n(this,e),this.move=r,this.boardAfterMove=[],this.score=-1e3};t.default=a},{}],2:[function(e,r,t){"use strict";function n(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var a=e("./init"),o=n(a),i=e("./minimax"),u=n(i),f=e("./game"),c=n(f),d=function(){function e(e){var r={};return(0,o.default)(e,r),(0,u.default)(r.board,r.aiCharacter,r.aiCharacter,0)}return{getAIMove:function(r){return e(r).move},getBoardAfterAIMove:function(r){return e(r).board},isTerminated:c.default.isTerminated,getStateOfGame:c.default.getStateOfGame}}();t.default=d},{"./game":3,"./init":4,"./minimax":6}],3:[function(e,r,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(){function e(e){return"not-end"!==r(e)}function r(e){for(var r=["x","o"],t=0;t<r.length;++t)if(a(r[t],e))return r[t]+"-won";for(var n=0;n<e.length;++n)if("e"===e[n])return"not-end";return"draw"}function t(e,r,t){return e===r+"-won"?10-t:"draw"===e?0:t-10}function n(e){var r=[];return e.forEach(function(e,t){"e"===e&&r.push(t)}),r}function a(e,r){for(var t=0;t<3;++t)if(e===r[t]&&e===r[t+3]&&e===r[t+6])return!0;for(var n=0;n<=6;n+=3)if(e===r[n]&&e===r[n+1]&&e===r[n+2])return!0;return e===r[0]&&e===r[4]&&e==r[8]||e===r[2]&&e===r[4]&&e==r[6]}function o(e,r,t){var n=e.slice();return n[r]=t,n}return{getStateOfGame:r,isTerminated:e,getGameScore:t,getAllMoves:n,getBoardAfterSimulatedMove:o}}();t.default=n},{}],4:[function(e,r,t){"use strict";function n(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var a=e("./validation"),o=n(a),i=function(e,r){for(var t in o.default){if(!e.hasOwnProperty(t))throw new Error('AI ERROR: Missing property : "'+t+'" in passed data object');r[t]=o.default[t](e)}};t.default=i},{"./validation":7}],5:[function(e,r,t){(function(r){"use strict";function t(e){return e&&e.__esModule?e:{default:e}}var n=e("./ai"),a=t(n);r.AI=a.default}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./ai":2}],6:[function(e,r,t){"use strict";function n(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var a=e("./action"),o=n(a),i=e("./game"),u=n(i),f=function(){function e(n,a,i,f){var c=u.default.getStateOfGame(n);if("not-end"!=c){var d=new o.default((-1));return d.score=u.default.getGameScore(c,i,f),d}var s=[];return u.default.getAllMoves(n).forEach(function(r){var t=new o.default(r);t.board=u.default.getBoardAfterSimulatedMove(n,r,a),t.score=e(t.board,"x"===a?"o":"x",i,f+1).score,s.push(t)}),s.sort(a===i?r:t),s[0]}var r=function(e,r){return r.score-e.score},t=function(e,r){return e.score-r.score};return{calculateValue:e}}();t.default=f.calculateValue},{"./action":1,"./game":3}],7:[function(e,r,t){"use strict";function n(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var a=e("./game"),o=n(a),i=function(){function e(e,r){if(e=e.toLowerCase(),"x"!==e&&"o"!==e)throw new Error("AI ERROR: "+e+" is not valid "+r+" character!");return e}function r(r,t){var n=e(r,"ai");if(n===t)throw new Error("AI ERROR: Player character "+r+" cannot be the same as ai character "+t+"!");return n}function t(e,r,t){if(!Array.isArray(e))throw new Error("AI ERROR: passed board argument is not type of array");if(9!==e.length)throw new Error("AI ERROR: length of board array is not valid, expected value is 9, given value's length is "+e.length);if(e.forEach(function(r,t){e[t]=r.toLowerCase()}),n(e))throw new Error("AI ERROR: board array contains invalid character !");var i=a(e,t),u=a(e,"o"===t?"x":"o");if(i>u||i===u&&r!==t)throw new Error("AI ERROR: It is not ai's turn!");if(u>i&&r===t)throw new Error("AI ERROR: Given board contains too few ai' moves");if(u-1>i)throw new Error("AI ERROR: Given board contains too few player' moves");if(o.default.isTerminated(e))throw new Error("AI ERROR: Given board represents terminated game!");return e}function n(e){var r=!1;return e.forEach(function(e){"e"!==e&&"x"!==e&&"o"!==e&&(r=!0)}),r}function a(e,r){return e.reduce(function(e,t){return t===r?e+1:e},0)}return{aiCharacter:function(r){return e(r.aiCharacter,"ai")},playerCharacter:function(e){return r(e.playerCharacter,e.aiCharacter)},startingCharacter:function(r){return e(r.startingCharacter,"starting")},board:function(e){return t(e.board,e.startingCharacter,e.aiCharacter)}}}();t.default=i},{"./game":3}]},{},[5]);